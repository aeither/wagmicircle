import {
  AuctionSalt,
  AuctionSuffix,
  FusionOrder,
  FusionSDK,
  NetworkEnum,
} from "@1inch/fusion-sdk";
import { useParticleProvider } from "@particle-network/connect-react-ui";

import { type NextPage } from "next";
import Head from "next/head";

const Home: NextPage = () => {
  const particleProvider = useParticleProvider();

  const handle = async () => {
    const sdk = new FusionSDK({
      url: "https://fusion.1inch.io",
      network: NetworkEnum.ETHEREUM,
    });

    const params = {
      fromTokenAddress: "0x6b175474e89094c44da98b954eedeac495271d0f",
      toTokenAddress: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
      amount: "1000000000000000000000",
    };

    const quote = await sdk.getQuote(params);
    console.log("ðŸš€ ~ file: fusion.tsx:21 ~ handle ~ quote:", quote);
  };

  const createOrder = async () => {
    console.log(
      "ðŸš€ ~ file: fusion.tsx:84 ~ createOrder ~ particleProvider:",
      particleProvider
    );

    if (!particleProvider) return;
    window.ethereum = particleProvider;

    const sdk = new FusionSDK({
      url: "https://fusion.1inch.io",
      network: NetworkEnum.ETHEREUM,
      //   blockchainProvider: provider
    });

    const salt = new AuctionSalt({
      duration: 180,
      auctionStartTime: 1673548149,
      initialRateBump: 50000,
      bankFee: "0",
    });

    const suffix = new AuctionSuffix({
      points: [
        {
          coefficient: 20000,
          delay: 12,
        },
      ],
      whitelist: [
        {
          address: "0x00000000219ab540356cbb839cbe05303d7705fa",
          allowance: 0,
        },
      ],
    });

    const order = new FusionOrder(
      {
        makerAsset: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
        takerAsset: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
        makingAmount: "1000000000000000000",
        takingAmount: "1420000000",
        maker: "0x00000000219ab540356cbb839cbe05303d7705fa",
      },
      salt,
      suffix
    );

    const orderBuild = order.build();
    console.log(
      "ðŸš€ ~ file: fusion.tsx:65 ~ createOrder ~ orderBuild:",
      orderBuild
    );

    // sdk.submitOrder(order, null).then(console.log);
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div>Hello</div>
          <button onClick={handle}>click me</button>
          <button onClick={createOrder}>Create Order</button>
        </div>
      </main>
    </>
  );
};

export default Home;
